=============================================================================
List of generated methods in project: Blinky3_KL03Z

This text description is generated by Processor Expert. Do not modify it.
=============================================================================

Module "clockMan1" (component fsl_clock_manager)
   - clockMan1_CLOCK_SYS_SetOutDiv1 -Sets the clock out divider1 setting(OUTDIV1).
   - clockMan1_CLOCK_SYS_GetOutDiv1 -Gets the clock out divider1 setting(OUTDIV1).
   - clockMan1_CLOCK_SYS_SetOutDiv4 -Sets the clock out divider4 setting(OUTDIV4).
   - clockMan1_CLOCK_SYS_GetOutDiv4 -Gets the clock out divider4 setting(OUTDIV4).
   - clockMan1_CLOCK_SYS_SetOutDiv -Sets the clock out dividers setting.
   - clockMan1_CLOCK_SYS_GetOutDiv -Gets the clock out dividers setting.
   - clockMan1_CLOCK_SYS_GetInternalRefClockFreq -Get internal reference clock frequency.
   - clockMan1_CLOCK_SYS_GetExternalRefClock32kFreq -Gets the external reference 32k clock frequency.
   - clockMan1_CLOCK_SYS_SetExternalRefClock32kSrc -Set the clock selection of ERCLK32K.
   - clockMan1_CLOCK_SYS_GetExternalRefClock32kSrc -Get the clock selection of ERCLK32K.
   - clockMan1_CLOCK_SYS_GetOsc0ExternalRefClockFreq -Gets the OSC0ERCLK frequency.
   - clockMan1_CLOCK_SYS_GetRtcFreq -Gets RTC input clock frequency.
   - clockMan1_CLOCK_SYS_GetRtcOutFreq -Gets RTC_CLKOUT frequency.
   - clockMan1_CLOCK_SYS_GetRtcOutSrc -Gets RTC_CLKOUT source.
   - clockMan1_CLOCK_SYS_SetRtcOutSrc -Gets RTC_CLKOUT source.
   - clockMan1_CLOCK_SYS_GetTpmFreq -Gets the clock frequency for TPM module.
   - clockMan1_CLOCK_SYS_SetTpmSrc -Set the TPM clock source selection.
   - clockMan1_CLOCK_SYS_GetTpmSrc -Get the TPM clock source selection.
   - clockMan1_CLOCK_SYS_GetLpuartSrc -Gets the clock source for LPUART module.
   - clockMan1_CLOCK_SYS_SetLpuartSrc -Sets the clock source for LPUART module.
   - clockMan1_CLOCK_SYS_GetLpuartFreq -Gets the clock frequency for LPUART module.
   - clockMan1_CLOCK_SYS_GetFtfFreq -Gets the clock frequency for FTF module. (Flash Memory)
   - clockMan1_CLOCK_SYS_GetCmpFreq -Gets the clock frequency for CMP module.
   - clockMan1_CLOCK_SYS_GetVrefFreq -Gets the clock frequency for VREF module.
   - clockMan1_CLOCK_SYS_GetSpiFreq -Gets the clock frequency for SPI module.
   - clockMan1_CLOCK_SYS_GetI2cFreq -Gets the clock frequency for I2C module.
   - clockMan1_CLOCK_SYS_GetAdcAltFreq -Gets ADC alternate clock frequency.
   - clockMan1_CLOCK_SYS_GetUartFreq -Gets the clock frequency for UART module.
   - clockMan1_CLOCK_SYS_GetGpioFreq -Gets the clock frequency for GPIO module.
   - clockMan1_CLOCK_SYS_EnablePortClock -Enable the clock for PORT module.
   - clockMan1_CLOCK_SYS_DisablePortClock -Disable the clock for PORT module.
   - clockMan1_CLOCK_SYS_GetPortGateCmd -Get the the clock gate state for PORT module.
   - clockMan1_CLOCK_SYS_EnableFtfClock -Enable the clock for FTF module.
   - clockMan1_CLOCK_SYS_DisableFtfClock -Disable the clock for FTF module.
   - clockMan1_CLOCK_SYS_GetFtfGateCmd -Get the the clock gate state for FTF module.
   - clockMan1_CLOCK_SYS_EnableAdcClock -Enable the clock for ADC module.
   - clockMan1_CLOCK_SYS_DisableAdcClock -Disable the clock for ADC module.
   - clockMan1_CLOCK_SYS_GetAdcGateCmd -Get the the clock gate state for ADC module.
   - clockMan1_CLOCK_SYS_EnableCmpClock -Enable the clock for CMP module.
   - clockMan1_CLOCK_SYS_DisableCmpClock -Disable the clock for CMP module.
   - clockMan1_CLOCK_SYS_GetCmpGateCmd -Get the the clock gate state for CMP module.
   - clockMan1_CLOCK_SYS_EnableVrefClock -Enable the clock for VREF module.
   - clockMan1_CLOCK_SYS_DisableVrefClock -Disable the clock for VREF module.
   - clockMan1_CLOCK_SYS_GetVrefGateCmd -Get the the clock gate state for VREF module.
   - clockMan1_CLOCK_SYS_GetLptmrFreq -Gets LPTMRx pre-scaler/glitch filter clock frequency.
   - clockMan1_CLOCK_SYS_EnableLptmrClock -Enable the clock for LPTIMER module.
   - clockMan1_CLOCK_SYS_DisableLptmrClock -Disable the clock for LPTIMER module.
   - clockMan1_CLOCK_SYS_GetLptmrGateCmd -Get the the clock gate state for LPTIMER module.
   - clockMan1_CLOCK_SYS_EnableRtcClock -Enable the clock for RTC module.
   - clockMan1_CLOCK_SYS_DisableRtcClock -Disable the clock for RTC module.
   - clockMan1_CLOCK_SYS_GetRtcGateCmd -Get the the clock gate state for RTC module.
   - clockMan1_CLOCK_SYS_EnableSpiClock -Enable the clock for SPI module.
   - clockMan1_CLOCK_SYS_DisableSpiClock -Disable the clock for SPI module.
   - clockMan1_CLOCK_SYS_GetSpiGateCmd -Get the the clock gate state for SPI module.
   - clockMan1_CLOCK_SYS_EnableI2cClock -Enable the clock for I2C module.
   - clockMan1_CLOCK_SYS_DisableI2cClock -Disable the clock for I2C module.
   - clockMan1_CLOCK_SYS_GetI2cGateCmd -Get the the clock gate state for I2C module.
   - clockMan1_CLOCK_SYS_EnableLpuartClock -Enable the clock for UART module.
   - clockMan1_CLOCK_SYS_DisableLpuartClock -Disable the clock for UART module.
   - clockMan1_CLOCK_SYS_GetLpuartGateCmd -Get the the clock gate state for UART module.
   - clockMan1_CLOCK_SYS_GetTpmExternalFreq -Gets Tpm external clock frequency.
   - clockMan1_CLOCK_SYS_SetTpmExternalSrc -Set the TPM external clock source selection.
   - clockMan1_CLOCK_SYS_GetTpmExternalSrc -Set the TPM external clock source selection.
   - clockMan1_CLOCK_SYS_EnableTpmClock -Enable the clock for TPM module.
   - clockMan1_CLOCK_SYS_DisableTpmClock -Disable the clock for TPM module.
   - clockMan1_CLOCK_SYS_GetTpmGateCmd -Get the the clock gate state for TPM module.
   - clockMan1_CLOCK_SYS_SetTpmExternalFreq -Set the TPM external clock frequency(TPM_CLKx).
   - clockMan1_CLOCK_SYS_Init -Installs pre-defined clock configurations.
   - clockMan1_CLOCK_SYS_UpdateConfiguration -Sets the system clock configuration according to a pre-defined structure.
   - clockMan1_CLOCK_SYS_SetConfiguration -Sets the system clock configuration.
   - clockMan1_CLOCK_SYS_GetCurrentConfiguration -Gets the current system clock configuration.
   - clockMan1_CLOCK_SYS_GetErrorCallback -Gets the callback which returns an error in the last clock switch.
   - clockMan1_CLOCK_SYS_SetMcgliteMode -Sets the MCGLite to a specific mode.
   - clockMan1_CLOCK_SYS_SetSimConfigration -Sets the clock configuration in SIM module.
   - clockMan1_CLOCK_SYS_OscInit -Initializes the OSC.
   - clockMan1_CLOCK_SYS_OscDeinit -Deinitializes the OSC.
   - clockMan1_CLOCK_SYS_SetOscerConfigration -Configures the OSCERCLK.
   - clockMan1_CLOCK_SYS_RtcOscInit -Initializes the RTC OSC.
   - clockMan1_CLOCK_SYS_RtcOscDeinit -Deinitializes the RTC OSC.
   - clockMan1_CLOCK_SYS_GetFreq -Gets the clock frequency for a specific clock name.
   - clockMan1_CLOCK_SYS_GetCoreClockFreq -Gets the core clock frequency.
   - clockMan1_CLOCK_SYS_GetSystemClockFreq -Gets the system clock frequency.
   - clockMan1_CLOCK_SYS_GetBusClockFreq -Gets the bus clock frequency.
   - clockMan1_CLOCK_SYS_GetFlashClockFreq -Gets the flash clock frequency.
   - clockMan1_CLOCK_SYS_GetLpoClockFreq -Gets the LPO clock frequency.
   - clockMan1_CLOCK_SYS_SetSystickSrc -Sets the Systick clock source SYST_CSR[CLKSOURCE].
   - clockMan1_CLOCK_SYS_GetSystickFreq -Gets the Systick clock frequency.

Module "pin_init"  (component PinSettings)
   - pin_init_hardware_init -This method configures registers according to settings of routing and electrical features. It 
                provides pin initialization for selected pins during processor start-up. Selected pins are either user selected 
                pins or pins selected in pin properties in components.  Only pins of devices  enabled for auto initialization 
                are handled within this method.
   - pin_init_init_coredebug_pins -CoreDebug method configures registers according to settings  of routing and electrical 
                features. This method is enabled only if any pin of corresponding peripheral type is selected. Selected pins 
                are either user selected pins or pins selected in pin items in components. Call this method code to route 
                desired pins into CoreDebug peripheral.
   - pin_init_deinit_coredebug_pins -CoreDebug method de-configures registers according to settings of routing. This method is 
                enabled only if any pin of corresponding peripheral type is selected. Selected pins are either user selected 
                pins or pins selected in pin items in components. Call this method code to un-route desired pins into CoreDebug 
                peripheral.
   - pin_init_init_gpio_pins -GPIO method configures registers according to settings  of routing and electrical features. This 
                method is enabled only if any pin of corresponding peripheral type is selected. Selected pins are either user 
                selected pins or pins selected in pin items in components. Call this method code to route desired pins into 
                GPIOA, GPIOB peripherals.
   - pin_init_deinit_gpio_pins -GPIO method de-configures registers according to settings of routing. This method is enabled 
                only if any pin of corresponding peripheral type is selected. Selected pins are either user selected pins or 
                pins selected in pin items in components. Call this method code to un-route desired pins into GPIOA, GPIOB 
                peripherals.
   - pin_init_init_osc_pins -OSC method configures registers according to settings  of routing and electrical features. This 
                method is enabled only if any pin of corresponding peripheral type is selected. Selected pins are either user 
                selected pins or pins selected in pin items in components. Call this method code to route desired pins into OSC 
                peripheral.
   - pin_init_deinit_osc_pins -OSC method de-configures registers according to settings of routing. This method is enabled only 
                if any pin of corresponding peripheral type is selected. Selected pins are either user selected pins or pins 
                selected in pin items in components. Call this method code to un-route desired pins into OSC peripheral.
   - pin_init_init_rcm_pins -RCM method configures registers according to settings  of routing and electrical features. This 
                method is enabled only if any pin of corresponding peripheral type is selected. Selected pins are either user 
                selected pins or pins selected in pin items in components. Call this method code to route desired pins into RCM 
                peripheral.
   - pin_init_deinit_rcm_pins -RCM method de-configures registers according to settings of routing. This method is enabled only 
                if any pin of corresponding peripheral type is selected. Selected pins are either user selected pins or pins 
                selected in pin items in components. Call this method code to un-route desired pins into RCM peripheral.
   - pin_init_init_sim_pins -SIM method configures registers according to settings  of routing and electrical features. This 
                method is enabled only if any pin of corresponding peripheral type is selected. Selected pins are either user 
                selected pins or pins selected in pin items in components. Call this method code to route desired pins into SIM 
                peripheral.
   - pin_init_deinit_sim_pins -SIM method de-configures registers according to settings of routing. This method is enabled only 
                if any pin of corresponding peripheral type is selected. Selected pins are either user selected pins or pins 
                selected in pin items in components. Call this method code to un-route desired pins into SIM peripheral.

Module "intMan1"   (component fsl_interrupt_manager)
   - intMan1_INT_SYS_InstallHandler -Installs an interrupt handler routine for a given IRQ number.
   - intMan1_INT_SYS_EnableIRQ -Enables an interrupt for a given IRQ number.
   - intMan1_INT_SYS_DisableIRQ -Disables an interrupt for a given IRQ number.
   - intMan1_INT_SYS_EnableIRQGlobal -Enables system interrupt.
   - intMan1_INT_SYS_DisableIRQGlobal -Disable system interrupt.

Module "osa1"      (component fsl_os_abstraction)
   - osa1_OSA_PollAllOtherTasks -Calls all task functions one time except for the current task.
   - osa1_DefaultISR -The default interrupt handler installed in vector table.
   - osa1_OSA_SemaCreate -Creates a semaphore with a given value.
   - osa1_OSA_SemaWait -Pending a semaphore with timeout.
   - osa1_OSA_SemaPost -Signals for someone waiting on the semaphore to wake up.
   - osa1_OSA_SemaDestroy -Destroys a previously created semaphore.
   - osa1_OSA_MutexCreate -Create an unlocked mutex.
   - osa1_OSA_MutexLock -Waits for a mutex and locks it.
   - osa1_OSA_MutexUnlock -Unlocks a previously locked mutex.
   - osa1_OSA_MutexDestroy -Destroys a previously created mutex.
   - osa1_OSA_EventCreate -Initializes an event object with all flags cleared.
   - osa1_OSA_EventWait -Waits for specified event flags to be set.
   - osa1_OSA_EventSet -Sets one or more event flags.
   - osa1_OSA_EventClear -Clears one or more flags.
   - osa1_OSA_EventGetFlags -Gets event flags status.
   - osa1_OSA_EventDestroy -Destroys a previously created event object.
   - osa1_OSA_TaskCreate -Creates a task.
   - osa1_OSA_TaskDestroy -Destroys a previously created task.
   - osa1_OSA_TaskYield -Puts the active task to the end of scheduler's queue.
   - osa1_OSA_TaskGetHandler -Gets the handler of active task.
   - osa1_OSA_TaskGetPriority -Gets the priority of a task.
   - osa1_OSA_TaskSetPriority -Sets the priority of a task.
   - osa1_OSA_MsgQCreate -Initializes a message queue.
   - osa1_OSA_MsgQPut -Puts a message at the end of the queue.
   - osa1_OSA_MsgQGet -Reads and remove a message at the head of the queue.
   - osa1_OSA_MsgQDestroy -Destroys a previously created queue.
   - osa1_OSA_MemAlloc -Reserves the requested amount of memory in bytes.
   - osa1_OSA_MemAllocZero -Reserves the requested amount of memory in bytes and initializes it to 0.
   - osa1_OSA_MemFree -Releases the memory previously reserved.
   - osa1_OSA_TimeDelay -Delays execution for a number of milliseconds.
   - osa1_OSA_TimeGetMsec -Gets the current time since system boot in milliseconds.
   - osa1_OSA_InstallIntHandler -Installs the interrupt handler.
   - osa1_OSA_EnterCritical -Enters the critical section to ensure some code is not preempted.
   - osa1_OSA_ExitCritical -Exits the critical section.
   - osa1_OSA_Init -Initializes the RTOS services.
   - osa1_OSA_Start -Starts the RTOS.

Module "gpio1"     (component fsl_gpio)
   - gpio1_GPIO_DRV_Init -Initializes all GPIO pins used by the board.
   - gpio1_GPIO_DRV_InputPinInit -Initializes one GPIO input pin used by the board.
   - gpio1_GPIO_DRV_OutputPinInit -Initializes one GPIO output pin used by the board.
   - gpio1_GPIO_DRV_GetPinDir -Gets the current direction of the individual GPIO pin.
   - gpio1_GPIO_DRV_SetPinDir -Sets the current direction of the individual GPIO pin.
   - gpio1_GPIO_DRV_WritePinOutput -Sets the output level of the individual GPIO pin to the logic 1 or 0.
   - gpio1_GPIO_DRV_SetPinOutput -Sets the output level of the individual GPIO pin to the logic 1.
   - gpio1_GPIO_DRV_ClearPinOutput -Sets the output level of the individual GPIO pin to the logic 0.
   - gpio1_GPIO_DRV_TogglePinOutput -Reverses current output logic of the individual GPIO pin.
   - gpio1_GPIO_DRV_ReadPinInput -Reads the current input value of the individual GPIO pin.
   - gpio1_GPIO_DRV_IsPinIntPending -Reads the individual pin-interrupt status flag.
   - gpio1_GPIO_DRV_ClearPinIntFlag -Clears the individual GPIO pin interrupt status flag.

Module "Cpu"       (component MKL03Z32FK4)
   - Cpu_SystemInit -This method configures the oscillator (PLL) that is part of the microcontroller device. SystemInit is 
                called from startup_device file.
   - Cpu_SystemCoreClockUpdate -SystemCoreClockUpdate evaluates the clock register settings and calculates the current core 
                clock.

===================================================================================
